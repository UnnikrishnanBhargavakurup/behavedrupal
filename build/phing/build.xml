<!--
  name: build.xml
  description: The main project build file for phing operations.
-->

<project name="govcms" default="build" phingVersion="2.8.2">

    <!-- Additional task classes -->
    <includepath classpath="${project.basedir}/phingcludes"/>
    <taskdef name="behat" classname="phingcludes.BehatTask"/>
    <!-- ============= -->

    <!-- Application -->
    <property name="repo.root.relative" value="${project.basedir}/../.."/>
    <resolvepath propertyName="repo.root" file="${repo.root.relative}"/>

    <!-- Composer & Behat -->
    <property name="composer.bin" value="${repo.root}/build/bin"/>
    <property name="behat.config"
              value="${repo.root}/build/tests/behat/behat.yml"/>
    <property name="behat.local"
              value="${repo.root}/build/tests/behat/behat.local.yml"/>
    <property name="phantomjs.bin"
              value="${composer.bin}/phantomjs" />
    <property name="phantomjs.webdriver" value="4444" />

    <!-- Targets       -->

    <target name="build"
            description="Build the govCMS project."
            depends="test:behat"/>

    <target name="phantomjs:launch"
          description="Launches a GhostDriver.">
      <exec command="${phantomjs.bin} --webdriver=${phantomjs.webdriver}"
          passthru="true"
          spawn="true"
          checkreturn="true" />
    </target>

    <target name="test:behat" description="Behat testing for govCMS" depends="phantomjs:launch">
        <!-- If behat.local.yml doesn't exist, behat will be a sad panda so create a stub to appease it. -->
        <if>
            <not>
                <available file="${behat.local}" property="behat_local_exists" value="exists"/>
            </not>
            <then>
                <echo message="# Local behat settings." file="${behat.local}"
                      append="false"/>
            </then>
        </if>

        <!-- Run behat. Any settings in behat.yml or behat.local.yml will be used. -->
        <behat executable="${composer.bin}/behat"
               config="${behat.config}"
               verbose="true"
               strict="true"
               haltonerror="true"
               returnProperty="behatPass"/>
    </target>

</project>
